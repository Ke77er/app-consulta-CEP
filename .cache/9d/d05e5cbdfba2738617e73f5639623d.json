{"id":"index.html","dependencies":[{"name":"/project/sandbox/package.json","includedInParent":true,"mtime":1677073227912}],"generated":{"html":"<meta charset=\"UTF-8\">\n<body>\n  <div id=\"app\">\n    <!-- input de texto para nome -->\n    <input type=\"text\" v-model=\"nome\" :style=\"estilo\" v-on:change=\"alterei\"><br><br>\n    <!-- textarea para nome2 -->\n    <textarea v-model=\"nome2\">\n    </textarea><br>\n    <!-- exibição dos valores de nome2 e nome -->\n     {{nome2}} <br>  {{nome}} <br> \n    <!-- exibição de uma div com o texto \"Olá Mundo\" quando mostrar_div é verdadeiro -->\n    <div id=\"div_ola\" v-if=\"mostrar_div\" v-html=\"msg\">\n      Olá Mundo.\n    </div><br>\n    <!-- botões para mostrar/esconder a div com o texto \"Olá Mundo\" -->\n    <button type=\"button\" v-on:click=\"mostrar\" v-if=\"!mostrar_div\">Mostrar</button>\n    <button type=\"button\" v-on:click=\"esconder\" v-if=\"mostrar_div\">Esconder</button>\n    <!-- lista com input de texto para cada item -->\n    <ul>\n      <li v-for=\"(item, index) in lista\" :key=\"index\">\n        {{item.nome}}\n        <input type=\"text\" v-model=\"item.nome\">\n      </li>\n    </ul>\n    <!-- dropdown para selecionar um nome da lista -->\n    <select v-model=\"nome_selecionado\">\n      <option v-for=\"(item, index) in lista\" :key=\"index\" :value=\"item.nome\">{{item.nome}}</option>\n    </select>\n    <!-- exibição do nome selecionado e quantas vezes ele foi alterado -->\n    O nome selecionado foi: {{nome_selecionado}} - e alteramos {{qtde}} vezes.\n    <br><br>\n    <!-- input de texto para CEP -->\n    <h4>CEP</h4>\n    <input type=\"text\" v-model=\"cep\" v-on:change=\"consulta_cep\" maxlength=\"8\">\n    <!-- exibição dos dados do CEP após consulta -->\n    <div v-if=\"cep_data != null \">\n      Logradouro: {{cep_data.logradouro}}\n      <table>\n        <tr v-for=\"(item,index) in cep_keys\">\n          <td>\n            {{item}}\n          </td>\n          <td>\n            {{ cep_data[item] }}\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</body>\n<script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.11\"></script>\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n<script>// cria uma nova instância do Vue.js e passa um objeto com propriedades e métodos como parâmetro\nvar app = new Vue({\n  // indica qual elemento HTML será gerenciado pelo Vue.js\n  el: \"#app\",\n  // objeto que contém as variáveis ​​e seus valores que serão usados na aplicação\n  data: {\n    mostrar_div: true,\n    // booleana para controlar a exibição de uma div\n    nome: \"Rafael\",\n    // uma string com um nome\n    nome2: \"Televisão\",\n    // uma outra string com um nome\n    lista: [\n    // uma lista de objetos, cada objeto contém uma propriedade \"nome\"\n    {\n      nome: \"Nome 01\"\n    }, {\n      nome: \"Nome 02\"\n    }, {\n      nome: \"Nome 03\"\n    }],\n    qtde: 0,\n    // um contador que será incrementado toda vez que uma opção for selecionada em um <select>\n    cep: \"\",\n    // uma string que receberá um CEP digitado pelo usuário\n    cep_data: null,\n    // um objeto que conterá os dados de um CEP consultado na API ViaCEP\n    cep_keys: [],\n    // uma lista de chaves do objeto cep_data\n    nome_selecionado: \"\",\n    // uma string que conterá o nome de uma opção selecionada em um <select>\n    estilo: \"background-color:green\",\n    // uma string que contém um estilo CSS para ser aplicado a um input\n    msg: \"Olá Mundo.\" // uma mensagem para ser exibida em uma div\n  },\n\n  methods: {\n    // métodos que serão usados na aplicação\n    mostrar: function mostrar() {\n      // método que muda o valor de mostrar_div para true\n      this.mostrar_div = true;\n    },\n    esconder: function esconder() {\n      // método que muda o valor de mostrar_div para false\n      this.mostrar_div = false;\n    },\n    alterei: function alterei(event) {\n      // método que será chamado quando o valor de um input for alterado\n      // alert(\"eu alterei o valor\");\n      console.log(\"valor? \", event.target.value);\n      console.log(\"evento? \", event);\n    },\n    consulta_cep: function consulta_cep() {\n      // método que consulta a API ViaCEP quando um CEP é digitado\n      var self = this;\n      axios.get(\"https://viacep.com.br/ws/\" + this.cep + \"/json/\").then(function (response) {\n        // se a consulta for bem-sucedida\n        console.log(response);\n        self.cep_data = response.data;\n        self.cep_keys = Object.keys(self.cep_data);\n      }).catch(function (error) {// se houver um erro na consulta\n        // console.log(error);\n      }).finally(function () {\n        // sempre será executado, independente do resultado da consulta\n      });\n    }\n  },\n  watch: {\n    // observa mudanças em variáveis específicas e dispara ações quando houver mudanças\n    nome_selecionado: function nome_selecionado() {\n      // quando o valor de nome_selecionado for alterado\n      this.qtde++; // incrementa o valor de qtde\n    }\n  },\n  created: function created() {\n    // é executado quando a instância do Vue.js é criada\n    console.log(\" eu criei o componente \");\n  },\n  mounted: function mounted() {\n    // é executado após o Vue.js ter sido montado no elemento HTML indicado\n    console.log(\" eu montei o componente \");\n  }\n});</script>"},"sourceMaps":null,"error":null,"hash":"b6dfa2ba8a27e87af1ed1e25c3c6f2e9","cacheData":{"env":{}}}